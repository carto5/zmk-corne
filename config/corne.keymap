/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB           &kp Q  &kp W  &kp E         &kp R  &kp T                      &kp Y      &kp U  &kp I       &kp O    &kp P          &kp BSPC
&kp ESCAPE        &kp A  &kp S  &kp D         &kp F  &kp G                      &kp H      &kp J  &kp K       &kp L    &kp SEMICOLON  &kp SINGLE_QUOTE
&kp LEFT_CONTROL  &kp Z  &kp X  &kp C         &kp V  &kp B                      &kp N      &kp M  &kp COMMA   &kp DOT  &kp FSLH       &kp LBRC
                                &kp LEFT_ALT  &mo 1  &mt LEFT_SHIFT CAPSLOCK    &kp SPACE  &mo 2  &kp DELETE
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB           &kp N1        &kp N2    &kp N3    &kp N4     &kp N5       &kp N6     &kp N7  &kp N8    &kp N9   &kp N0   &kp BSPC
&kp LEFT_SHIFT    &kp LEFT_GUI  &trans    &kp UP    &trans     &trans       &kp F1     &kp F2  &kp F3    &kp F4   &kp F5   &kp F6
&kp LEFT_CONTROL  &trans        &kp LEFT  &kp DOWN  &kp RIGHT  &trans       &kp F7     &kp F8  &kp F9    &kp F10  &kp F11  &kp F12
                                          &kp R     &trans     &kp SPACE    &kp ENTER  &trans  &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp EXCL          &kp AT            &kp HASH   &kp DLLR      &kp PERCENT     &kp CARET          &kp AMPS  &kp ASTRK             &kp LPAR      &kp RPAR       &kp BSPC
&kp LCTRL  &kp RA(NUMBER_1)  &kp RA(NUMBER_2)  &trans     &kp LS(N8)    &kp LS(N9)      &kp LA(KP_DIVIDE)  &kp RBKT  &kp RA(SINGLE_QUOTE)  &kp RA(NUHS)  &kp BACKSLASH  &kp GRAVE
&kp LSHFT  &bt BT_SEL 0      &kp RA(GRAVE)     &kp MINUS  &kp BSLH      &kp LS(BSLH)    &kp UNDER          &kp RBKT  &kp RA(LBRC)          &kp RA(RBRC)  &kp PIPE       &kp TILDE
                                               &kp LGUI   &bt BT_SEL 1  &kp ENTER       &kp SPACE          &trans    &kp RALT
            >;
        };
    };
};
